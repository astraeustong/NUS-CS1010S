'''
A. Implementthe function
 num_cards which takes a non-negative integer h, and returns the
 number of cards needed to build a tower of height h. Your function should solve the problem
 computationally, i.e. using recursion or iteration and not simply use a formula. [5 marks]
'''

def num_cards(h):
    output = 0
    pointer = 1
    while pointer <= h:
        output += (pointer - 1) * 3 + 2
        pointer += 1
    return output

'''
 Implement a function
 num_triangles, which takes a non-negative integer h, and returns the
 number of triangles that can be formed from a tower of height h. Your function should solve
 the problem computationally, i.e. using recursion or iteration and not simply use a formula.
 Hint: You may want to consider counting upright and inverted triangles separately. [5 marks]
 '''

 def num_triangles(h):
    up = 0
    
    def triangle(num):
        cal = 0
        for i in range(num + 1):
            cal += i
        return cal
    
    for j in range(h):
        up += triangle(j)
        
    low_l = [0]
    if h == 2:
        low_l.append(1)
    elif h == 3:
        low_l.append(1)
        low_l.append(3)
    else:
        low_l.append(1)
        low_l.append(3)
        for k in range(4,h + 1):
            left = low_l[k - 3]
            right = 0
            for m in range(k):
                right += m
            low_l.append(right + left)
            
    result = up + low_l[-1]
    return result
